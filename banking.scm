(define (make-account balance)
	(define s (make-serializer))
	(define (withdraw amount)
		(if (>= balance amount) (begin (set! balance (- balance amount) ) balance) 'insufficient_funds))
	(define (deposit amount)
	(begin (set! balance (+ amount balance)) ))
	(lambda (request)
		(cond ((eq? request 'withdraw) (s withdraw))
			((eq? request 'deposit) (s deposit)))))

(define (make-serializer)
	(let (mutex (make-mutex)))
	(lambda (p)
		(define (serialized-p args)
			(mutex 'acquire)
			(apply p args)
			(mutex 'release)) serialized-p))
